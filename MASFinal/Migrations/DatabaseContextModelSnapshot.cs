// <auto-generated />
using System;
using MASFinal.Backend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MASFinal.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MASFinal.Backend.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ApartmentNumber")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Adress");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Boat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BuyDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CanSleep")
                        .HasColumnType("bit");

                    b.Property<decimal>("DailyRentalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Displacement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("DriveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasSail")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RequiresHelmsmanLicense")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DriveId");

                    b.ToTable("Boats");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.CombustionEngine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AverageFuelConsumption")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Capacity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("CombustionEngines");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.DriveType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CombustionEngineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ElectricEngineId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CombustionEngineId")
                        .IsUnique();

                    b.HasIndex("ElectricEngineId")
                        .IsUnique();

                    b.ToTable("DriveTypes");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.ElectricEngine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AveragePowerConsumption")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumChargingCurrent")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ElectricEngines");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.GroundVehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BuyDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CamperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<decimal>("DailyRentalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid>("DriveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfWheels")
                        .HasColumnType("int");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RimSize")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusId")
                        .IsUnique();

                    b.HasIndex("CamperId")
                        .IsUnique();

                    b.HasIndex("DriveId");

                    b.ToTable("GroundVehicles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("GroundVehicle");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Mechanic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfEmployment")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Mechanics");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Rent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BoatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroundVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("RentalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RentalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BoatId");

                    b.HasIndex("ClientId");

                    b.HasIndex("GroundVehicleId");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Repair", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroundVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MechanicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("RepairCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GroundVehicleId");

                    b.HasIndex("MechanicId");

                    b.ToTable("Repairs");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Amphibian", b =>
                {
                    b.HasBaseType("MASFinal.Backend.Models.GroundVehicle");

                    b.Property<decimal>("Displacement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DriveSystem")
                        .HasColumnType("int");

                    b.Property<decimal>("MaximumLaunchAngle")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("RequiresHelmsmanLicense")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Amphibian");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Bus", b =>
                {
                    b.HasBaseType("MASFinal.Backend.Models.GroundVehicle");

                    b.Property<decimal>("TrunkCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypeOfBody")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Bus");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Camper", b =>
                {
                    b.HasBaseType("MASFinal.Backend.Models.GroundVehicle");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasGenerator")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Camper");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Boat", b =>
                {
                    b.HasOne("MASFinal.Backend.Models.DriveType", "Drive")
                        .WithMany()
                        .HasForeignKey("DriveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drive");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Client", b =>
                {
                    b.HasOne("MASFinal.Backend.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.DriveType", b =>
                {
                    b.HasOne("MASFinal.Backend.Models.CombustionEngine", "CombustionEngine")
                        .WithOne("Drive")
                        .HasForeignKey("MASFinal.Backend.Models.DriveType", "CombustionEngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASFinal.Backend.Models.ElectricEngine", "ElectricEngine")
                        .WithOne("Drive")
                        .HasForeignKey("MASFinal.Backend.Models.DriveType", "ElectricEngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CombustionEngine");

                    b.Navigation("ElectricEngine");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.GroundVehicle", b =>
                {
                    b.HasOne("MASFinal.Backend.Models.Bus", "Bus")
                        .WithOne("GroundVehicle")
                        .HasForeignKey("MASFinal.Backend.Models.GroundVehicle", "BusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MASFinal.Backend.Models.Camper", "Camper")
                        .WithOne("GroundVehicle")
                        .HasForeignKey("MASFinal.Backend.Models.GroundVehicle", "CamperId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MASFinal.Backend.Models.DriveType", "Drive")
                        .WithMany()
                        .HasForeignKey("DriveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Camper");

                    b.Navigation("Drive");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Mechanic", b =>
                {
                    b.HasOne("MASFinal.Backend.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Rent", b =>
                {
                    b.HasOne("MASFinal.Backend.Models.Boat", null)
                        .WithMany("Rents")
                        .HasForeignKey("BoatId");

                    b.HasOne("MASFinal.Backend.Models.Client", "Client")
                        .WithMany("Rents")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASFinal.Backend.Models.GroundVehicle", null)
                        .WithMany("Rents")
                        .HasForeignKey("GroundVehicleId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Repair", b =>
                {
                    b.HasOne("MASFinal.Backend.Models.GroundVehicle", "GroundVehicle")
                        .WithMany("Repairs")
                        .HasForeignKey("GroundVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASFinal.Backend.Models.Mechanic", "Mechanic")
                        .WithMany("Repairs")
                        .HasForeignKey("MechanicId");

                    b.Navigation("GroundVehicle");

                    b.Navigation("Mechanic");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Boat", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Client", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.CombustionEngine", b =>
                {
                    b.Navigation("Drive")
                        .IsRequired();
                });

            modelBuilder.Entity("MASFinal.Backend.Models.ElectricEngine", b =>
                {
                    b.Navigation("Drive")
                        .IsRequired();
                });

            modelBuilder.Entity("MASFinal.Backend.Models.GroundVehicle", b =>
                {
                    b.Navigation("Rents");

                    b.Navigation("Repairs");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Mechanic", b =>
                {
                    b.Navigation("Repairs");
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Bus", b =>
                {
                    b.Navigation("GroundVehicle")
                        .IsRequired();
                });

            modelBuilder.Entity("MASFinal.Backend.Models.Camper", b =>
                {
                    b.Navigation("GroundVehicle")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
